{"version":3,"sources":["App.tsx","reportWebVitals.js","index.js"],"names":["Container","styled","div","Header","Dot","Bar","TopBar","BottomBar","HeaderText","Background","Shadow","HeartIconWrapper","JumboNumber","Footer","App","useState","flag","setFlag","since","useMemo","moment","now","diffDays","diff","diffSeconds","useEffect","interval","setInterval","clearInterval","HeartFilled","style","width","top","left","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAOMA,EAAYC,IAAOC,IAAV,4JASTC,EAASF,IAAOC,IAAV,qDAINE,EAAMH,IAAOC,IAAV,2IAQHG,EAAMJ,IAAOC,IAAV,kJAQHI,EAASL,YAAOI,EAAPJ,CAAH,4CAINM,EAAYN,YAAOI,EAAPJ,CAAH,6CAITO,EAAaP,IAAOC,IAAV,sEAKVO,EAAaR,IAAOC,IAAV,6KAUVQ,EAAST,IAAOC,IAAV,0KASNS,EAAmBV,IAAOC,IAAV,0HAQhBU,EAAcX,IAAOC,IAAV,yKAWXW,EAASZ,IAAOC,IAAV,kGA8DGY,MAvDf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,KAEPC,EAAQC,mBAAQ,kBACpBC,IAAO,WAAY,cAClB,IACGC,EAAMF,mBAAQ,kBAClBC,QACC,CAACJ,IAEEM,EAAWD,EAAIE,KAAKL,EAAO,QAC3BM,EAAcH,EAAIE,KAAKL,EAAO,WAYpC,OAVAO,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3BV,EAAQ,MACP,KACH,OAAO,WACLW,cAAcF,MAEf,IAID,eAAC1B,EAAD,WACE,eAACG,EAAD,WACE,cAACC,EAAD,IACA,cAACE,EAAD,IACA,cAACE,EAAD,mDAGA,cAACD,EAAD,OAEF,eAACE,EAAD,WACE,cAACE,EAAD,UACE,cAACkB,EAAA,EAAD,MAEF,cAACnB,EAAD,CAAQoB,MAAO,CAACC,MAAO,OAAQC,IAAK,OAAQC,KAAM,WAClD,cAACvB,EAAD,CAAQoB,MAAO,CAACC,MAAO,OAAQC,IAAK,OAAQC,KAAM,UAClD,cAACvB,EAAD,CAAQoB,MAAO,CAACC,MAAO,OAAQC,IAAK,OAAQC,KAAM,aAEpD,eAACpB,EAAD,WACE,eAACD,EAAD,WACGU,EACD,8CAIF,qCACKE,EADL,oBCjIOU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e2525e4f.chunk.js","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport styled from 'styled-components';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport moment from 'moment';\nimport {HeartFilled} from '@ant-design/icons'\n\nconst Container = styled.div`\n  background-color: #f7f7f7;\n  height: 100vh;\n  width: 100vw;\n  position: relative;\n  overflow: hidden;\n  color: #ab7c7c;\n`\n\nconst Header = styled.div`\n  padding: 36px 24px 0;\n`\n\nconst Dot = styled.div`\n  border-radius: 100px;\n  height: 40px;\n  width: 40px;\n  margin-bottom: 6px;\n  background-color: #f57c61;\n`\n\nconst Bar = styled.div`\n  height: 2px;\n  border-radius: 2px;\n  display: inline-block;\n  background-color: #dddddd;\n  margin-bottom: 6px;\n`\n\nconst TopBar = styled(Bar)`\n  width: 30px;\n`\n\nconst BottomBar = styled(Bar)`\n  width: 100px;\n`\n\nconst HeaderText = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n`\n\nconst Background = styled.div`\n  border-radius: 10vw;\n  width: 80vw;\n  height: 80vw;\n  position: absolute;\n  background: #fff;\n  top: calc(50vh - 40vw);\n  right: -15vw;\n`\n\nconst Shadow = styled.div`\n  display: inline-block;\n  background: #fddfd8;\n  height: 8vw;\n  border-radius: 4vw;\n  position: absolute;\n  transform: rotate(-45deg);\n`\n\nconst HeartIconWrapper = styled.div`\n  font-size: 80vw;\n  color: #f57c61;\n  position: absolute;\n  top: -25vw;\n  right: -12vw;\n`\n\nconst JumboNumber = styled.div`\n  font-size: 96px;\n  font-weight: bold;\n  > small {\n    font-size: 24px;\n    position: relative;\n    bottom: 4px;\n    left: 4px;\n  }\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 24px;\n  left: 0;\n  padding: 24px;\n`\n\nfunction App() {\n  const [flag, setFlag] = useState({})\n  const since = useMemo(() => (\n    moment('20210203', 'YYYYMMDD')\n  ), [])\n  const now = useMemo(() => (\n    moment()\n  ), [flag])\n\n  const diffDays = now.diff(since, 'days')\n  const diffSeconds = now.diff(since, 'seconds')\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setFlag({})\n    }, 1000)\n    return () => {\n      clearInterval(interval)\n    }\n  }, [])\n\n\n  return (\n    <Container>\n      <Header>\n        <Dot/>\n        <TopBar/>\n        <HeaderText>\n          和两块在一起\n        </HeaderText>\n        <BottomBar/>\n      </Header>\n      <Background>\n        <HeartIconWrapper>\n          <HeartFilled />\n        </HeartIconWrapper>\n        <Shadow style={{width: '24vw', top: '34vw', left: '-10vw'}}/>\n        <Shadow style={{width: '30vw', top: '52vw', left: '-9vw'}}/>\n        <Shadow style={{width: '20vw', top: '58vw', left: '12vw'}}/>\n      </Background>\n      <Footer>\n        <JumboNumber>\n          {diffDays}\n          <small>\n            天\n          </small>\n        </JumboNumber>\n        <div>\n          = {diffSeconds} 秒\n        </div>\n      </Footer>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}